.TH ModbusMasterStatus 3lightmodbus "28 July 2016" "v1.2"
.SH NAME
.PP
\fBModbusMasterStatus\fP \- data type containing all information about current master device status and its configuration.
.SH SYNOPSIS
.PP
\fB\fC
    typedef struct
    {
        ModbusData *data; //Data read from slave
        uint8_t dataLength; //Count of data type instances read from slave
        uint8_t finished; //Is parsing finished?
        ModbusException exception; //Optional exception read
        ModbusFrame request; //Formatted request for slave
    } ModbusMasterStatus; //Type containing master device configuration data
\fR
.SH DESCRIPTION
.PP
The \fBModbusMasterStatus\fP contains information about master device configuration and status. To make sure, that structure is set up for use properly,
remember to call \fBmodbusMasterInit\fP\&.
.TS
allbox;
cb cb
l l
l l
l l
l l
l l
.
member name	description
data	dynamically allocated array of type \fBModbusData\fP, and length of \fIdataLength\fP containing data read from salve device
dataLength	length of \fIdata\fP array
finished	If not equal to 0, data processing has finished, and results can be read. Useful when multiple threads are present.
exception	\fBModbusException\fP structure, containing information about exception returned by slave, if any
request	\fBModbusFrame\fP structure, containing request frame built by master device, after one of \fBmodbusBuildRequest\fP functions was called
.TE
.SH NOTES
.PP
\fBModbusMasterStatus\fP is declared in \fBlightmodbus/master/mtypes.h\fP, although including \fBlightmodbus/master.h\fP is enough.
.SH SEE ALSO
.PP
ModbusFrame( 3lightmodbus ), ModbusException( 3lightmodbus ), ModbusData( 3lightmodbus ), modbusMasterInit( 3lightmodbus ), modbusMasterEnd( 3lightmodbus )
